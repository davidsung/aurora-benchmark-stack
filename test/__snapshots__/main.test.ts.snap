// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": Object {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ap-southeast-4": Object {
        "states": "states.ap-southeast-4.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": Object {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "il-central-1": Object {
        "states": "states.il-central-1.amazonaws.com",
      },
      "me-central-1": Object {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Outputs": Object {
    "AsgName": Object {
      "Value": Object {
        "Ref": "BenchmarkServiceAutoscalerASG4E12DE6C",
      },
    },
    "DBDatabaseName": Object {
      "Value": "postgres",
    },
    "DBReaderEndpoint": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
          "ReadEndpoint.Address",
        ],
      },
    },
    "DBReaderPort": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
          "Endpoint.Port",
        ],
      },
    },
    "DBSecretId": Object {
      "Value": Object {
        "Fn::Join": Array [
          "-",
          Array [
            Object {
              "Fn::Select": Array [
                0,
                Object {
                  "Fn::Split": Array [
                    "-",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "testBenchmarkServiceAuroraPostgresDatabaseClusterSecret7E21A2EF3fdaad7efa858a3daf9490cf0a702aeb",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "Fn::Select": Array [
                1,
                Object {
                  "Fn::Split": Array [
                    "-",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "testBenchmarkServiceAuroraPostgresDatabaseClusterSecret7E21A2EF3fdaad7efa858a3daf9490cf0a702aeb",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "DBUsername": Object {
      "Value": "benchmark",
    },
    "DBWriterEndpoint": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
          "Endpoint.Address",
        ],
      },
    },
    "DBWriterPort": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
          "Endpoint.Port",
        ],
      },
    },
    "LogGroupArn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "BenchmarkServiceLogGroupD6F7E1F0",
          "Arn",
        ],
      },
    },
    "LogGroupName": Object {
      "Value": Object {
        "Ref": "BenchmarkServiceLogGroupD6F7E1F0",
      },
    },
    "PgbenchInit": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws ssm send-command --targets --instance-ids $(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names ",
            Object {
              "Ref": "BenchmarkServiceAutoscalerASG4E12DE6C",
            },
            " | jq -r \\".AutoScalingGroups[].Instances | first .InstanceId\\") --document-name \\"AWS-RunShellScript\\" --document-version \\"1\\" --parameters '{\\"workingDirectory\\":[\\"\\"],\\"executionTimeout\\":[\\"3600\\"],\\"commands\\":[\\"export STACK_NAME=test\\",\\"export BENCHMARK_SCALE_FACTOR=1000\\",\\"export BENCHMARK_FILL_FACTOR=90\\",\\"cd /home/ec2-user/benchmark/\\",\\"source /home/ec2-user/benchmark/postgres_writer_env.sh\\",\\"nohup /home/ec2-user/benchmark/benchmark_init.sh 2>&1 &\\"]}' --timeout-seconds 600 --cloud-watch-output-config '{\\"CloudWatchLogGroupName\\":\\"",
            Object {
              "Ref": "BenchmarkServiceLogGroupD6F7E1F0",
            },
            "\\",\\"CloudWatchOutputEnabled\\":true}'",
          ],
        ],
      },
    },
    "PgbenchTx": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws ssm send-command --targets Key=tag:benchmark,Values=transaction_group --document-name \\"AWS-RunShellScript\\" --document-version \\"1\\" --parameters '{\\"workingDirectory\\":[\\"\\"],\\"executionTimeout\\":[\\"3600\\"],\\"commands\\":[\\"export STACK_NAME=test\\",\\"export BENCHMARK_CONNECTIONS=10\\",\\"export BENCHMARK_THREADS=2\\",\\"export BENCHMARK_PROGRESS=60\\",\\"export BENCHMARK_TIME=300\\",\\"cd /home/ec2-user/benchmark/\\",\\"source /home/ec2-user/benchmark/postgres_writer_env.sh\\",\\"nohup /home/ec2-user/benchmark/benchmark_default.sh 2>&1 &\\"]}' --timeout-seconds 300 --max-concurrency \\"50\\" --max-errors \\"0\\" --cloud-watch-output-config '{\\"CloudWatchLogGroupName\\":\\"",
            Object {
              "Ref": "BenchmarkServiceLogGroupD6F7E1F0",
            },
            "\\",\\"CloudWatchOutputEnabled\\":true}'",
          ],
        ],
      },
    },
    "SsmStartSession": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws ssm start-session --target $(aws autoscaling describe-auto-scaling-instances | jq -r '.AutoScalingInstances[] | select (.AutoScalingGroupName == \\"",
            Object {
              "Ref": "BenchmarkServiceAutoscalerASG4E12DE6C",
            },
            "\\") | .InstanceId')",
          ],
        ],
      },
    },
    "TerminateInstances": Object {
      "Value": "aws autoscaling terminate-instance-in-auto-scaling-group --no-should-decrement-desired-capacity --instance-id $(aws autoscaling describe-auto-scaling-groups --filters Name=tag:stack,Values=test | jq -r \\".AutoScalingGroups[].Instances[].InstanceId\\")",
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "BenchmarkServiceAuroraPostgresDatabaseClusterClusterInstanceReader1B4BF1D0E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VpcdatabaseSubnet1RouteTableAssociationEE6CA36B",
        "VpcdatabaseSubnet2RouteTableAssociationCADBAF9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
        },
        "DBInstanceClass": "db.t4g.medium",
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceDBPerformanceInsightEncryptionKey892D2812",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterClusterInstanceWriter135A97FD": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VpcdatabaseSubnet1RouteTableAssociationEE6CA36B",
        "VpcdatabaseSubnet2RouteTableAssociationCADBAF9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
        },
        "DBInstanceClass": "db.t4g.medium",
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceDBPerformanceInsightEncryptionKey892D2812",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql12",
        "DBSubnetGroupName": Object {
          "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterSubnetsA4D791AE",
        },
        "DatabaseName": "postgres",
        "Engine": "aurora-postgresql",
        "EngineVersion": "12.16",
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceDBStorageEncryptionKeyB7C44211",
            "Arn",
          ],
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "testBenchmarkServiceAuroraPostgresDatabaseClusterSecret7E21A2EF3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "benchmark",
        "Port": 5432,
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "BenchmarkServiceAuroraPostgresDatabaseClusterSecurityGroup944E1D9F",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterSecretAttachmentA817D394": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "testBenchmarkServiceAuroraPostgresDatabaseClusterSecret7E21A2EF3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterSecurityGroup944E1D9F": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterSecurityGroupfromtestBenchmarkServiceAutoscalerAutoscalerSecurityGroup7BA7F9CFIndirectPort4F530E88": Object {
      "Properties": Object {
        "Description": "from testBenchmarkServiceAutoscalerAutoscalerSecurityGroup7BA7F9CF:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAuroraPostgresDatabaseClusterSecurityGroup944E1D9F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerAutoscalerSecurityGroup3B06825E",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "BenchmarkServiceAuroraPostgresDatabaseClusterSubnetsA4D791AE": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for DatabaseCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcdatabaseSubnet1SubnetD53A427B",
          },
          Object {
            "Ref": "VpcdatabaseSubnet2Subnet75663D63",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "BenchmarkServiceAutoscalerASG4E12DE6C": Object {
      "Properties": Object {
        "MaxSize": "1",
        "MinSize": "1",
        "MixedInstancesPolicy": Object {
          "InstancesDistribution": Object {
            "OnDemandPercentageAboveBaseCapacity": 100,
          },
          "LaunchTemplate": Object {
            "LaunchTemplateSpecification": Object {
              "LaunchTemplateId": Object {
                "Ref": "BenchmarkServiceAutoscalerAutoscalerLaunchTemplate820DF0DF",
              },
              "Version": Object {
                "Fn::GetAtt": Array [
                  "BenchmarkServiceAutoscalerAutoscalerLaunchTemplate820DF0DF",
                  "LatestVersionNumber",
                ],
              },
            },
          },
        },
        "Tags": Array [
          Object {
            "Key": "benchmark",
            "PropagateAtLaunch": true,
            "Value": "transaction_group",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Fn::GetAtt": Array [
              "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResource51E1B310",
              "SubnetId",
            ],
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "BenchmarkServiceAutoscalerAutoscalerLaunchTemplate820DF0DF": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerRoleDefaultPolicy338718A2",
        "BenchmarkServiceAutoscalerRoleAF8D0CDD",
      ],
      "Properties": Object {
        "LaunchTemplateData": Object {
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerAutoscalerLaunchTemplateProfileA892EE0B",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "InstanceType": "t3.micro",
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerAutoscalerSecurityGroup3B06825E",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "test/BenchmarkService/Autoscaler/AutoscalerLaunchTemplate",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "test/BenchmarkService/Autoscaler/AutoscalerLaunchTemplate",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "#!/bin/bash
sudo yum install -y amazon-linux-extras
sudo amazon-linux-extras enable postgresql12
sudo yum clean metadata
sudo amazon-linux-extras install postgresql12
sudo yum install -y jq postgresql-contrib
mkdir /home/ec2-user/benchmark
cd /home/ec2-user/benchmark
mkdir -p $(dirname '/home/ec2-user/benchmark/2a4bce2ab6506dc7b7de7ff68cd8c8fa27d4d0af1e0641b27dfcab5ab2f78e21.zip')
aws s3 cp 's3://",
                  Object {
                    "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                  },
                  "/2a4bce2ab6506dc7b7de7ff68cd8c8fa27d4d0af1e0641b27dfcab5ab2f78e21.zip' '/home/ec2-user/benchmark/2a4bce2ab6506dc7b7de7ff68cd8c8fa27d4d0af1e0641b27dfcab5ab2f78e21.zip'
aws configure set region ",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  "
cp -r /root/.aws /home/ec2-user/
sudo chown -R ec2-user: /home/ec2-user/.aws
unzip 2a4bce2ab6506dc7b7de7ff68cd8c8fa27d4d0af1e0641b27dfcab5ab2f78e21.zip
cp -f /home/ec2-user/benchmark/ulimits.conf /etc/security/limits.conf
sudo chown -R ec2-user: /home/ec2-user/benchmark
sudo chmod +x /home/ec2-user/benchmark/*.sh",
                ],
              ],
            },
          },
        },
        "TagSpecifications": Array [
          Object {
            "ResourceType": "launch-template",
            "Tags": Array [
              Object {
                "Key": "Name",
                "Value": "test/BenchmarkService/Autoscaler/AutoscalerLaunchTemplate",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "BenchmarkServiceAutoscalerAutoscalerLaunchTemplateProfileA892EE0B": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerRoleAF8D0CDD",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "BenchmarkServiceAutoscalerAutoscalerSecurityGroup3B06825E": Object {
      "Properties": Object {
        "GroupDescription": "test/BenchmarkService/Autoscaler/AutoscalerSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResource51E1B310": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterIdentifier": Object {
          "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterDD5B86C0",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventA45FDBF0",
            "Arn",
          ],
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleDefaultPolicy7DE031CD",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4cb52106aa446af08ff9dc46283ba4af249bd2674af6b07ade68b6e18092b3ea.zip",
        },
        "Handler": "db_az_awareness_event_handler.is_complete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
      },
      "Type": "AWS::Lambda::Function",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleDefaultPolicy7DE031CD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:DescribeVPCs",
                "ec2:DescribeSubnets",
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleDefaultPolicy7DE031CD",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleDefaultPolicy7DE031CD",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4cb52106aa446af08ff9dc46283ba4af249bd2674af6b07ade68b6e18092b3ea.zip",
        },
        "Handler": "db_az_awareness_event_handler.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessLambdaRoleFD0F0A8E",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
      },
      "Type": "AWS::Lambda::Function",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisComplete76F74455": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRoleDefaultPolicyED39A243",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRole3963253A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (test/BenchmarkService/Autoscaler/DBAvailabilityZoneAwarenessCustomResource/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRole3963253A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRole3963253A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRoleDefaultPolicyED39A243": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRoleDefaultPolicyED39A243",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisCompleteServiceRole3963253A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventA45FDBF0": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy184879B1",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRole257D58C0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test/BenchmarkService/Autoscaler/DBAvailabilityZoneAwarenessCustomResource/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineAE201AFA",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRole257D58C0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRole257D58C0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy184879B1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineAE201AFA",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy184879B1",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonEventServiceRole257D58C0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeout40D1DC60": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRoleDefaultPolicyA1F180A3",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRole5E82693A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (test/BenchmarkService/Autoscaler/DBAvailabilityZoneAwarenessCustomResource/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRole5E82693A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRole5E82693A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRoleDefaultPolicyA1F180A3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessOnEventFnD842F238",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceDBAvailabilityZoneAwarenessIsCompleteFn453790C4",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRoleDefaultPolicyA1F180A3",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeoutServiceRole5E82693A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineAE201AFA": Object {
      "DependsOn": Array [
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRoleDefaultPolicyA3AC91DC",
        "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRole4B189813",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":30,\\"MaxAttempts\\":60,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisComplete76F74455",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeout40D1DC60",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRole4B189813",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRole4B189813": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRoleDefaultPolicyA3AC91DC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisComplete76F74455",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkisComplete76F74455",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeout40D1DC60",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderframeworkonTimeout40D1DC60",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRoleDefaultPolicyA3AC91DC",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerDBAvailabilityZoneAwarenessCustomResourceProviderwaiterstatemachineRole4B189813",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerPolicy351DE57F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerPolicy351DE57F",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerRoleAF8D0CDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceAutoscalerRoleAF8D0CDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkServiceAutoscalerRoleDefaultPolicy338718A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "BenchmarkServiceAuroraPostgresDatabaseClusterSecretAttachmentA817D394",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkServiceAutoscalerRoleDefaultPolicy338718A2",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkServiceAutoscalerRoleAF8D0CDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarkServiceDBPerformanceInsightEncryptionKey892D2812": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceDBStorageEncryptionKeyB7C44211": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "BenchmarkServiceLogGroupD6F7E1F0": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcapplicationSubnet1DefaultRouteD1F37131": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcingressSubnet1NATGateway5ADD866D",
        },
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet1RouteTableAssociation75D5245D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
        "SubnetId": Object {
          "Ref": "VpcapplicationSubnet1Subnet8B68205B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet1RouteTableF03E8296": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
          Object {
            "Key": "subnet-type",
            "Value": "private",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet1Subnet8B68205B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
          Object {
            "Key": "subnet-type",
            "Value": "private",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcapplicationSubnet2DefaultRoute928D347B": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcingressSubnet1NATGateway5ADD866D",
        },
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet2RouteTable17378AED": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
          Object {
            "Key": "subnet-type",
            "Value": "private",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet2RouteTableAssociationF25110CC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
        "SubnetId": Object {
          "Ref": "VpcapplicationSubnet2Subnet29670962",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet2Subnet29670962": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
          Object {
            "Key": "subnet-type",
            "Value": "private",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet1RouteTableAssociationEE6CA36B": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdatabaseSubnet1RouteTableF3B572E4",
        },
        "SubnetId": Object {
          "Ref": "VpcdatabaseSubnet1SubnetD53A427B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet1RouteTableF3B572E4": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet1SubnetD53A427B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet2RouteTable1E50BD8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet2RouteTableAssociationCADBAF9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdatabaseSubnet2RouteTable1E50BD8E",
        },
        "SubnetId": Object {
          "Ref": "VpcdatabaseSubnet2Subnet75663D63",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet2Subnet75663D63": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcingressSubnet1DefaultRoute4188A546": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet1EIPD1FA297B": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcingressSubnet1NATGateway5ADD866D": Object {
      "DependsOn": Array [
        "VpcingressSubnet1DefaultRoute4188A546",
        "VpcingressSubnet1RouteTableAssociation5DF54E70",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcingressSubnet1EIPD1FA297B",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcingressSubnet1RouteTable804C7A26": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet1RouteTableAssociation5DF54E70": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet1Subnet059F22C6": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcingressSubnet2DefaultRoute18203BC3": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet2RouteTable8B0E23A7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet2RouteTableAssociation39E1BA3A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet2SubnetF175D754",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet2SubnetF175D754": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testBenchmarkServiceAuroraPostgresDatabaseClusterSecret7E21A2EF3fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"benchmark\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
